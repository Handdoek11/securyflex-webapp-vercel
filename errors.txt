
> securyflex@0.1.0 lint
> biome check

scripts\admin\cleanup-test-data.js:4:26 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━

  i A Node.js builtin module should be imported with the node: protocol.
  
    3 │ const { PrismaClient } = require("@prisma/client");
  > 4 │ const readline = require("readline");
      │                          ^^^^^^^^^^
    5 │ const prisma = new PrismaClient();
    6 │ 
  
  i Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  i Unsafe fix: Add the node: protocol.
  
      2   2 │   
      3   3 │   const { PrismaClient } = require("@prisma/client");
      4     │ - const·readline·=·require("readline");
          4 │ + const·readline·=·require("node:readline");
      5   5 │   const prisma = new PrismaClient();
      6   6 │   
  

scripts\admin\cleanup-test-data.js:22:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
    20 │   try {
    21 │     console.log("🧹 Test Data Cleanup Tool");
  > 22 │     console.log("=" + "=".repeat(50));
       │                 ^^^^^^^^^^^^^^^^^^^^
    23 │     console.log("!�  WARNING: This will permanently delete test data!");
    24 │     console.log("=" + "=".repeat(50) + "\n");
  
  i Unsafe fix: Use a template literal.
  
     20  20 │     try {
     21  21 │       console.log("🧹 Test Data Cleanup Tool");
     22     │ - ····console.log("="·+·"=".repeat(50));
         22 │ + ····console.log(`=${"=".repeat(50)}`);
     23  23 │       console.log("!�  WARNING: This will permanently delete test data!");
     24  24 │       console.log("=" + "=".repeat(50) + "\n");
  

scripts\admin\cleanup-test-data.js:24:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
    22 │     console.log("=" + "=".repeat(50));
    23 │     console.log("!�  WARNING: This will permanently delete test data!");
  > 24 │     console.log("=" + "=".repeat(50) + "\n");
       │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    25 │ 
    26 │     // Check if we're in production
  
  i Unsafe fix: Use a template literal.
  
     22  22 │       console.log("=" + "=".repeat(50));
     23  23 │       console.log("!�  WARNING: This will permanently delete test data!");
     24     │ - ····console.log("="·+·"=".repeat(50)·+·"\n");
         24 │ + ····console.log(`=${"=".repeat(50)}\n`);
     25  25 │   
     26  26 │       // Check if we're in production
  

scripts\admin\cleanup-test-data.js:74:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
    72 │     });
    73 │ 
  > 74 │     console.log("\n" + "-".repeat(50));
       │                 ^^^^^^^^^^^^^^^^^^^^^
    75 │ 
    76 │     // Ask for confirmation
  
  i Unsafe fix: Use a template literal.
  
     72  72 │       });
     73  73 │   
     74     │ - ····console.log("\n"·+·"-".repeat(50));
         74 │ + ····console.log(`\n${"-".repeat(50)}`);
     75  75 │   
     76  76 │       // Ask for confirmation
  

scripts\admin\daily-report.js:9:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
     7 │   try {
     8 │     console.log("📊 Generating Daily Admin Report");
   > 9 │     console.log("=" + "=".repeat(50));
       │                 ^^^^^^^^^^^^^^^^^^^^
    10 │     console.log(`Date: ${new Date().toLocaleDateString("nl-NL")}`);
    11 │     console.log("=" + "=".repeat(50) + "\n");
  
  i Unsafe fix: Use a template literal.
  
      7   7 │     try {
      8   8 │       console.log("📊 Generating Daily Admin Report");
      9     │ - ····console.log("="·+·"=".repeat(50));
          9 │ + ····console.log(`=${"=".repeat(50)}`);
     10  10 │       console.log(`Date: ${new Date().toLocaleDateString("nl-NL")}`);
     11  11 │       console.log("=" + "=".repeat(50) + "\n");
  

scripts\admin\daily-report.js:11:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
     9 │     console.log("=" + "=".repeat(50));
    10 │     console.log(`Date: ${new Date().toLocaleDateString("nl-NL")}`);
  > 11 │     console.log("=" + "=".repeat(50) + "\n");
       │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    12 │ 
    13 │     // User Statistics
  
  i Unsafe fix: Use a template literal.
  
      9   9 │       console.log("=" + "=".repeat(50));
     10  10 │       console.log(`Date: ${new Date().toLocaleDateString("nl-NL")}`);
     11     │ - ····console.log("="·+·"=".repeat(50)·+·"\n");
         11 │ + ····console.log(`=${"=".repeat(50)}\n`);
     12  12 │   
     13  13 │       // User Statistics
  

scripts\admin\daily-report.js:163:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
    161 │     console.log(`Pending Document Verifications: ${pendingDocs}`);
    162 │ 
  > 163 │     console.log("\n" + "=".repeat(51));
        │                 ^^^^^^^^^^^^^^^^^^^^^
    164 │     console.log("Report generated successfully!");
    165 │   } catch (error) {
  
  i Unsafe fix: Use a template literal.
  
    161 161 │       console.log(`Pending Document Verifications: ${pendingDocs}`);
    162 162 │   
    163     │ - ····console.log("\n"·+·"=".repeat(51));
        163 │ + ····console.log(`\n${"=".repeat(51)}`);
    164 164 │       console.log("Report generated successfully!");
    165 165 │     } catch (error) {
  

scripts\admin\export-users.js:4:20 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━━━━━━

  i A Node.js builtin module should be imported with the node: protocol.
  
    3 │ const { PrismaClient } = require("@prisma/client");
  > 4 │ const fs = require("fs");
      │                    ^^^^
    5 │ const path = require("path");
    6 │ const prisma = new PrismaClient();
  
  i Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  i Unsafe fix: Add the node: protocol.
  
      2   2 │   
      3   3 │   const { PrismaClient } = require("@prisma/client");
      4     │ - const·fs·=·require("fs");
          4 │ + const·fs·=·require("node:fs");
      5   5 │   const path = require("path");
      6   6 │   const prisma = new PrismaClient();
  

scripts\admin\export-users.js:5:22 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━━━━━━━━

  i A Node.js builtin module should be imported with the node: protocol.
  
    3 │ const { PrismaClient } = require("@prisma/client");
    4 │ const fs = require("fs");
  > 5 │ const path = require("path");
      │                      ^^^^^^
    6 │ const prisma = new PrismaClient();
    7 │ 
  
  i Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  i Unsafe fix: Add the node: protocol.
  
      3   3 │   const { PrismaClient } = require("@prisma/client");
      4   4 │   const fs = require("fs");
      5     │ - const·path·=·require("path");
          5 │ + const·path·=·require("node:path");
      6   6 │   const prisma = new PrismaClient();
      7   7 │   
  

scripts\admin\reset-user-password.js:5:26 lint/style/useNodejsImportProtocol  FIXABLE  ━━━━━━━━━━━━━

  i A Node.js builtin module should be imported with the node: protocol.
  
    3 │ const { PrismaClient } = require("@prisma/client");
    4 │ const bcrypt = require("bcryptjs");
  > 5 │ const readline = require("readline");
      │                          ^^^^^^^^^^
    6 │ const prisma = new PrismaClient();
    7 │ 
  
  i Using the node: protocol is more explicit and signals that the imported module belongs to Node.js.
  
  i Unsafe fix: Add the node: protocol.
  
      3   3 │   const { PrismaClient } = require("@prisma/client");
      4   4 │   const bcrypt = require("bcryptjs");
      5     │ - const·readline·=·require("readline");
          5 │ + const·readline·=·require("node:readline");
      6   6 │   const prisma = new PrismaClient();
      7   7 │   
  

scripts\admin\reset-user-password.js:47:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
    45 │   try {
    46 │     console.log("🔐 User Password Reset Tool");
  > 47 │     console.log("=" + "=".repeat(50) + "\n");
       │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    48 │ 
    49 │     const email = process.argv[2];
  
  i Unsafe fix: Use a template literal.
  
     45  45 │     try {
     46  46 │       console.log("🔐 User Password Reset Tool");
     47     │ - ····console.log("="·+·"=".repeat(50)·+·"\n");
         47 │ + ····console.log(`=${"=".repeat(50)}\n`);
     48  48 │   
     49  49 │       const email = process.argv[2];
  

scripts\admin\reset-user-password.js:144:17 lint/style/useTemplate  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━━━

  i Template literals are preferred over string concatenation.
  
    143 │     console.log("\n✅ Password reset successful!");
  > 144 │     console.log("=" + "=".repeat(50));
        │                 ^^^^^^^^^^^^^^^^^^^^
    145 │     console.log("\n📋 NEW PASSWORD INFORMATION:");
    146 │     console.log("-".repeat(30));
  
  i Unsafe fix: Use a template literal.
  
    142 142 │   
    143 143 │       console.log("\n✅ Password reset successful!");
    144     │ - ····console.log("="·+·"=".repeat(50));
        144 │ + ····console.log(`=${"=".repeat(50)}`);
    145 145 │       console.log("\n📋 NEW PASSWORD INFORMATION:");
    146 146 │       console.log("-".repeat(30));
  

src\app\api\admin\actions\route.ts:134:42 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    132 │       activeOpdrachten,
    133 │       lockedAccounts,
  > 134 │       monthlyRevenue: (monthlyRevenue as any)[0]?.total || 0,
        │                                          ^^^
    135 │     });
    136 │   } catch (error) {
  
  i any disables many type checking rules. Its use should be avoided.
  

src\app\api\admin\actions\stats\route.ts:57:42 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━

  ! Unexpected any. Specify a different type.
  
    55 │       activeOpdrachten,
    56 │       lockedAccounts,
  > 57 │       monthlyRevenue: (monthlyRevenue as any)[0]?.total || 0,
       │                                          ^^^
    58 │     });
    59 │   } catch (error) {
  
  i any disables many type checking rules. Its use should be avoided.
  

src\app\api\admin\actions\export-transactions\route.ts:1:1 assist/source/organizeImports  FIXABLE  ━━━━━━━━━━

  × The imports and exports are not sorted.
  
  > 1 │ import { NextResponse } from "next/server";
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ import { auth } from "@/lib/auth";
    3 │ import { isAdminEmail, transactionsToCSV } from "@/lib/admin/auth";
  
  i Safe fix: Organize Imports (Biome)
  
     1  1 │   import { NextResponse } from "next/server";
     2    │ - import·{·auth·}·from·"@/lib/auth";
     3    │ - import·{·isAdminEmail,·transactionsToCSV·}·from·"@/lib/admin/auth";
        2 │ + import·{·isAdminEmail,·transactionsToCSV·}·from·"@/lib/admin/auth";
        3 │ + import·{·auth·}·from·"@/lib/auth";
     4  4 │   import prisma from "@/lib/prisma";
     5  5 │   
  

src\app\api\admin\actions\export-users\route.ts:1:1 assist/source/organizeImports  FIXABLE  ━━━━━━━━━━

  × The imports and exports are not sorted.
  
  > 1 │ import { NextResponse } from "next/server";
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ import { auth } from "@/lib/auth";
    3 │ import { isAdminEmail, usersToCSV } from "@/lib/admin/auth";
  
  i Safe fix: Organize Imports (Biome)
  
     1  1 │   import { NextResponse } from "next/server";
     2    │ - import·{·auth·}·from·"@/lib/auth";
     3    │ - import·{·isAdminEmail,·usersToCSV·}·from·"@/lib/admin/auth";
        2 │ + import·{·isAdminEmail,·usersToCSV·}·from·"@/lib/admin/auth";
        3 │ + import·{·auth·}·from·"@/lib/auth";
     4  4 │   import prisma from "@/lib/prisma";
     5  5 │   
  

src\app\api\admin\actions\reset-password\route.ts:1:1 assist/source/organizeImports  FIXABLE  ━━━━━━━━━━

  × The imports and exports are not sorted.
  
  > 1 │ import { type NextRequest, NextResponse } from "next/server";
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ import bcrypt from "bcryptjs";
    3 │ import { auth } from "@/lib/auth";
  
  i Safe fix: Organize Imports (Biome)
  
      1     │ - import·{·type·NextRequest,·NextResponse·}·from·"next/server";
      2     │ - import·bcrypt·from·"bcryptjs";
      3     │ - import·{·auth·}·from·"@/lib/auth";
      4     │ - import·{·isAdminEmail,·validateAdminPassword·}·from·"@/lib/admin/auth";
          1 │ + import·bcrypt·from·"bcryptjs";
          2 │ + import·{·type·NextRequest,·NextResponse·}·from·"next/server";
          3 │ + import·{·isAdminEmail,·validateAdminPassword·}·from·"@/lib/admin/auth";
          4 │ + import·{·auth·}·from·"@/lib/auth";
      5   5 │   import prisma from "@/lib/prisma";
      6   6 │   
  

src\app\api\admin\actions\route.ts:1:1 assist/source/organizeImports  FIXABLE  ━━━━━━━━━━━━━━━━━━━━━

  × The imports and exports are not sorted.
  
  > 1 │ import { type NextRequest, NextResponse } from "next/server";
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ import bcrypt from "bcryptjs";
    3 │ import { auth } from "@/lib/auth";
  
  i Safe fix: Organize Imports (Biome)
  
      1     │ - import·{·type·NextRequest,·NextResponse·}·from·"next/server";
      2     │ - import·bcrypt·from·"bcryptjs";
      3     │ - import·{·auth·}·from·"@/lib/auth";
      4     │ - import·{
      5     │ - ··formatCurrency,
      6     │ - ··isAdminEmail,
      7     │ - ··transactionsToCSV,
      8     │ - ··usersToCSV,
      9     │ - ··validateAdminPassword,
     10     │ - }·from·"@/lib/admin/auth";
          1 │ + import·bcrypt·from·"bcryptjs";
          2 │ + import·{·type·NextRequest,·NextResponse·}·from·"next/server";
          3 │ + import·{
          4 │ + ··formatCurrency,
          5 │ + ··isAdminEmail,
          6 │ + ··transactionsToCSV,
          7 │ + ··usersToCSV,
          8 │ + ··validateAdminPassword,
          9 │ + }·from·"@/lib/admin/auth";
         10 │ + import·{·auth·}·from·"@/lib/auth";
     11  11 │   import prisma from "@/lib/prisma";
     12  12 │   
  

src\app\api\admin\actions\stats\route.ts:1:1 assist/source/organizeImports  FIXABLE  ━━━━━━━━━━━━━━━

  × The imports and exports are not sorted.
  
  > 1 │ import { type NextRequest, NextResponse } from "next/server";
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ import { auth } from "@/lib/auth";
    3 │ import { isAdminEmail } from "@/lib/admin/auth";
  
  i Safe fix: Organize Imports (Biome)
  
     1  1 │   import { type NextRequest, NextResponse } from "next/server";
     2    │ - import·{·auth·}·from·"@/lib/auth";
     3    │ - import·{·isAdminEmail·}·from·"@/lib/admin/auth";
        2 │ + import·{·isAdminEmail·}·from·"@/lib/admin/auth";
        3 │ + import·{·auth·}·from·"@/lib/auth";
     4  4 │   import prisma from "@/lib/prisma";
     5  5 │   
  

src\app\api\admin\auth-logs\route.ts:1:1 assist/source/organizeImports  FIXABLE  ━━━━━━━━━━━━━━━━━━━

  × The imports and exports are not sorted.
  
  > 1 │ import { type NextRequest, NextResponse } from "next/server";
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2 │ import { auth } from "@/lib/auth";
    3 │ import { isAdminEmail } from "@/lib/admin/auth";
  
  i Safe fix: Organize Imports (Biome)
  
     1  1 │   import { type NextRequest, NextResponse } from "next/server";
     2    │ - import·{·auth·}·from·"@/lib/auth";
     3    │ - import·{·isAdminEmail·}·from·"@/lib/admin/auth";
        2 │ + import·{·isAdminEmail·}·from·"@/lib/admin/auth";
        3 │ + import·{·auth·}·from·"@/lib/auth";
     4  4 │   import prisma from "@/lib/prisma";
     5  5 │   
  

The number of diagnostics exceeds the limit allowed. Use --max-diagnostics to increase it.
Diagnostics not shown: 616.
Checked 295 files in 121ms. No fixes applied.
Found 240 errors.
Found 378 warnings.
check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while running checks.
  

